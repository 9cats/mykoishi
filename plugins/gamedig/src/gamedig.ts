import Gamedig from "gamedig";

// Reference: https://github.com/gamedig/node-gamedig/blob/master/GAMES_LIST.md#Supported
export const SUPPORTED_GAMES = [
  `7d2d`,
  `as`,
  `ahl`,
  `ageofchivalry`,
  `aoe2`,
  `alienarena`,
  `alienswarm`,
  `avp2`,
  `avp2010`,
  `americasarmy`,
  `americasarmy2`,
  `americasarmy3`,
  `americasarmypg`,
  `arcasimracing`,
  `arkse`,
  `arma2`,
  `arma2oa`,
  `arma3`,
  `arma`,
  `armacwa`,
  `armar`,
  `armare`,
  `armagetron`,
  `assettocorsa`,
  `atlas`,
  `avorion`,
  `baldursgate`,
  `ballisticoverkill`,
  `barotrauma`,
  `bat1944`,
  `bf1942`,
  `bf2`,
  `bf2142`,
  `bf3`,
  `bf4`,
  `bfh`,
  `bfv`,
  `bfbc2`,
  `bd`,
  `blackmesa`,
  `brainbread`,
  `brainbread2`,
  `breach`,
  `breed`,
  `brink`,
  `bs`,
  `buildandshoot`,
  `cod`,
  `cod2`,
  `cod3`,
  `cod4`,
  `codmw2`,
  `codmw3`,
  `coduo`,
  `codwaw`,
  `callofjuarez`,
  `chaser`,
  `chivalry`,
  `chrome`,
  `codenamecure`,
  `codenameeagle`,
  `colonysurvival`,
  `cacrenegade`,
  `commandos3`,
  `conanexiles`,
  `contagion`,
  `contactjack`,
  `corekeeper`,
  `cs15`,
  `cs16`,
  `cs2d`,
  `cscz`,
  `csgo`,
  `css`,
  `cs2`,
  `creativerse`,
  `crossracing`,
  `crysis`,
  `crysis2`,
  `crysiswars`,
  `dab`,
  `daikatana`,
  `dnl`,
  `dmomam`,
  `darkesthour`,
  `dod`,
  `dods`,
  `dayofdragons`,
  `doi`,
  `daysofwar`,
  `dayz`,
  `dayzmod`,
  `deadlydozenpt`,
  `dh2005`,
  `descent3`,
  `deusex`,
  `devastation`,
  `dinodday`,
  `dirttrackracing2`,
  `discord`,
  `dmc`,
  `dst`,
  `doom3`,
  `dota2`,
  `drakan`,
  `dystopia`,
  `eco`,
  `empyrion`,
  `empiresmod`,
  `etqw`,
  `fear`,
  `f1c9902`,
  `farcry`,
  `farcry2`,
  `f12002`,
  `fof`,
  `fortressforever`,
  `ffow`,
  `garrysmod`,
  `geneshift`,
  `mutantfactions`,
  `giantscitizenkabuto`,
  `globaloperations`,
  `ges`,
  `gore`,
  `fivem`,
  `mtasa`,
  `mtavc`,
  `groundbreach`,
  `gunmanchronicles`,
  `hl2dm`,
  `hldm`,
  `hldms`,
  `hlopfor`,
  `halo`,
  `halo2`,
  `hll`,
  `heretic2`,
  `hexen2`,
  `had2`,
  `homefront`,
  `homeworld2`,
  `hurtworld`,
  `igi2`,
  `il2`,
  `insurgency`,
  `insurgencymic`,
  `insurgencysandstorm`,
  `ironstorm`,
  `isle`,
  `jamesbondnightfire`,
  `jc2mp`,
  `jc3mp`,
  `kspdmp`,
  `killingfloor`,
  `killingfloor2`,
  `kingpin`,
  `kisspc`,
  `kzmod`,
  `left4dead`,
  `left4dead2`,
  `m2mp`,
  `m2o`,
  `moh2010`,
  `mohab`,
  `mohaa`,
  `mohbt`,
  `mohsh`,
  `mohpa`,
  `mohwf`,
  `medievalengineers`,
  `minecraft`,
  `minecraftping`,
  `minecraftpe`,
  `minecraftbe`,
  `mnc`,
  `mordhau`,
  `mumble`,
  `mumbleping`,
  `nascarthunder2004`,
  `ns`,
  `ns2`,
  `nfshp2`,
  `nab`,
  `netpanzer`,
  `nwn`,
  `nwn2`,
  `nexuiz`,
  `nitrofamily`,
  `nmrih`,
  `nolf2`,
  `nucleardawn`,
  `onset`,
  `ohd`,
  `openarena`,
  `openttd`,
  `operationflashpoint`,
  `flashpoint`,
  `flashpointresistance`,
  `painkiller`,
  `pc`,
  `pc2`,
  `pixark`,
  `pvkii`,
  `ps`,
  `postal2`,
  `prey`,
  `primalcarnage`,
  `prbf2`,
  `przomboid`,
  `quake1`,
  `quake2`,
  `quake3`,
  `quake4`,
  `quakelive`,
  `ragdollkungfu`,
  `r6`,
  `r6roguespear`,
  `r6ravenshield`,
  `rallisportchallenge`,
  `rallymasters`,
  `redorchestra`,
  `redorchestra2`,
  `redorchestraost`,
  `redline`,
  `redm`,
  `rtcw`,
  `rfactor`,
  `ricochet`,
  `riseofnations`,
  `rs2`,
  `risingworld`,
  `ror2`,
  `rune`,
  `rust`,
  `stalker`,
  `samp`,
  `saomp`,
  `savage2`,
  `ss`,
  `ss2`,
  `shatteredhorizon`,
  `shogo`,
  `shootmania`,
  `sin`,
  `sinep`,
  `soldat`,
  `sof`,
  `sof2`,
  `sonsoftheforest`,
  `spaceengineers`,
  `squad`,
  `stbc`,
  `stvef`,
  `stvef2`,
  `swjk2`,
  `swjk`,
  `swbf`,
  `swbf2`,
  `swrc`,
  `starbound`,
  `starmade`,
  `starsiege`,
  `suicidesurvival`,
  `stn`,
  `svencoop`,
  `swat4`,
  `synergy`,
  `tacticalops`,
  `takeonhelicopters`,
  `teamfactor`,
  `tf2`,
  `tfc`,
  `teamspeak2`,
  `teamspeak3`,
  `terminus`,
  `terraria`,
  `tshock`,
  `forrest`,
  `thefront`,
  `hidden`,
  `nolf`,
  `ship`,
  `ts`,
  `graw`,
  `graw2`,
  `theforest`,
  `thps3`,
  `thps4`,
  `thu2`,
  `towerunite`,
  `trackmania2`,
  `trackmaniaforever`,
  `tremulous`,
  `tribes1`,
  `tribesvengeance`,
  `tron20`,
  `turok2`,
  `universalcombat`,
  `unreal`,
  `ut`,
  `ut2003`,
  `ut2004`,
  `ut3`,
  `unturned`,
  `urbanterror`,
  `vrising`,
  `v8supercar`,
  `vs`,
  `valheim`,
  `ventrilo`,
  `vcmp`,
  `vietcong`,
  `vietcong2`,
  `warfork`,
  `warsow`,
  `wheeloftime`,
  `wolfenstein2009`,
  `wolfensteinet`,
  `wurm`,
  `xpandrally`,
  `zombiemaster`,
  `zps`,
] as const;

declare class Gamedig {
  constructor(runnerOpts?: { listenUdpPort?: number | undefined });
  query(options: Gamedig.QueryOptions): Promise<Gamedig.QueryResult>;
  query(
    options: Gamedig.QueryOptions,
    callback: (error: Error, state: Gamedig.QueryResult) => void
  ): void;

  static query(options: Gamedig.QueryOptions): Promise<Gamedig.QueryResult>;
  static query(
    options: Gamedig.QueryOptions,
    callback: (error: Error, state: Gamedig.QueryResult) => void
  ): void;
  static getInstance(): Gamedig;
}
declare namespace Gamedig {
  type Type = typeof SUPPORTED_GAMES[number];

  interface Player {
    name?: string | undefined;
    ping?: number | undefined;
    score?: number | undefined;
    team?: string | undefined;
    address?: string | undefined;
    raw?: object | undefined;
  }

  interface QueryOptions {
    type: Type;
    host: string;
    port?: number | undefined;
    maxAttempts?: number | undefined;
    socketTimeout?: number | undefined;
    attemptTimeout?: number | undefined;
    givenPortOnly?: boolean | undefined;
    ipFamily?: 0 | 4 | 6 | undefined;
    debug?: boolean | undefined;
    requestRules?: boolean | undefined;
  }

  interface QueryResult {
    name: string;
    map: string;
    password: boolean;
    maxplayers: number;
    players: Player[];
    bots: Player[];
    connect: string;
    ping: number;
    raw?: object | undefined;
  }
}
export default Gamedig;
